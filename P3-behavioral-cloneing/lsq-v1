FROM gcr.io/tensorflow/tensorflow:latest-gpu

MAINTAINER Li Siqi <lisiqi9310@163.com>

# Install pip3
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
	python3 get-pip.py && \
	rm get-pip.py

# Add SNI support to Python
RUN pip3 --no-cache-dir install \
    pyopenssl \
    ndg-httpsclient \
    pyasn1

# Install useful Python packages using pip3 to avoid version incompatibilities with Tensorflow binary
# especially numpy, scipy, skimage and sklearn (see https://github.com/tensorflow/tensorflow/issues/2034)
RUN pip3 --no-cache-dir install \
    numpy \
    scipy \
    nose \
    h5py \
    scikit-image \
    matplotlib \
    pandas \
    sklearn \
    sympy \
    tqdm

# Install other useful Python packages using pip3
RUN pip3 --no-cache-dir install --upgrade ipython && \
    pip3 --no-cache-dir install \
    Cython \
    ipykernel \
    jupyter \
    path.py \
    Pillow \
    pygments \
    six \
    sphinx \
    wheel \
    zmq \
    opencv-python \
    && \
    python3 -m ipykernel.kernelspec

# Install tensorflow-gpu and keras using pip3
RUN pip3 --no-cache-dir install\
    tensorflow-gpu\
    keras==1.2.1

# Install requirement packages for openCV
RUN apt-get update && apt-get install -y \
        cmake \
        git \
        libgtk2.0-dev \
	    pkg-config \
        libavcodec-dev \
        libavformat-dev \
        libswscale-dev \
        libv4l-dev \
        libtbb2 \
        libtbb-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libdc1394-22-dev \
        libjasper-dev \
        libxvidcore-dev \
        libx264-dev \
        libatlas-base-dev \
        gfortran \
        ffmpeg \
        wget \
        && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/* 

# Install openCV3
WORKDIR /notebooks
ENV OPENCV_VERSION="3.4.0"
RUN apt-get update \
&& wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip \
&& unzip ${OPENCV_VERSION}.zip \
&& mkdir /opencv-${OPENCV_VERSION}/cmake_binary \
&& cd /opencv-${OPENCV_VERSION}/cmake_binary \
&& cmake -DBUILD_TIFF=ON \
  -DBUILD_opencv_java=OFF \
  -DWITH_CUDA=OFF \
  -DENABLE_AVX=ON \
  -DWITH_OPENGL=ON \
  -DWITH_OPENCL=ON \
  -DWITH_IPP=ON \
  -DWITH_TBB=ON \
  -DWITH_EIGEN=ON \
  -DWITH_V4L=ON \
  -DBUILD_TESTS=OFF \
  -DBUILD_PERF_TESTS=OFF \
  -DCMAKE_BUILD_TYPE=RELEASE \
  -DCMAKE_INSTALL_PREFIX=$(python3.5 -c "import sys; print(sys.prefix)") \
  -DPYTHON_EXECUTABLE=$(which python3.5) \
  -DPYTHON_INCLUDE_DIR=$(python3.5 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
  -DPYTHON_PACKAGES_PATH=$(python3.5 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") .. \
&& make install \
&& rm /${OPENCV_VERSION}.zip \
&& rm -r /opencv-${OPENCV_VERSION}

